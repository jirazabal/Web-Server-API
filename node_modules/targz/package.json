{
  "_from": "targz",
  "_id": "targz@1.0.1",
  "_inBundle": false,
  "_integrity": "sha1-j3alI2lM3t+7XWCkB2/27uzFOY8=",
  "_location": "/targz",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "targz",
    "fetchSpec": "latest",
    "name": "targz",
    "raw": "targz",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/targz/-/targz-1.0.1.tgz",
  "_shasum": "8f76a523694cdedfbb5d60a4076ff6eeecc5398f",
  "_spec": "targz",
  "_where": "/Users/justin/Projects/Web-Server-API/node-rest-api/public/javascripts",
  "author": {
    "email": "miska.kaipiainen@gmail.com",
    "name": "Miska Kaipiainen"
  },
  "bugs": {
    "url": "https://github.com/miskun/targz/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "tar-fs": "^1.8.1"
  },
  "deprecated": false,
  "description": "TarGz for NodeJS",
  "devDependencies": {},
  "homepage": "https://github.com/miskun/targz#readme",
  "keywords": [
    "gz",
    "gzip",
    "node",
    "tar",
    "tar.gz",
    "targz"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "targz",
  "optionalDependencies": {},
  "readme": "# TarGz for NodeJS\n\nSimple tar.gz compression and decompression for NodeJS.\n\n## Installation\n\n```\nnpm install targz\n```\n\n## Simple Usage\n\n```javascript\n\nvar targz = require('targz');\n\n// compress files into tar.gz archive\ntargz.compress({\n    src: 'path_to_files',\n    dest: 'path_to_compressed_file'\n}, function(err){\n    if(err) {\n        console.log(err);\n    } else {\n        console.log(\"Done!\");\n    }\n});\n\n// decompress files from tar.gz archive\ntargz.decompress({\n    src: 'path_to_compressed file',\n    dest: 'path_to_extract'\n}, function(err){\n    if(err) {\n        console.log(err);\n    } else {\n        console.log(\"Done!\");\n    }\n});\n\n```\n\n## Advanced Usage\n\nYou can adjust tar and gzip/gunzip parameters by using optional parameters. The API:\n\n```javascript\n\n// Compress API\ntargz.compress( options, callback );\n\n// Decompress API\ntargz.decompress( options, callback );\n\n```\n\nWhere supported options are:\n\n* **src** - (String) The path to files to be compressed\n* **dest** - (String) The path to tar.gz file to be created\n* **tar** - (Object) Adjust tar options. See [tar-fs](https://github.com/mafintosh/tar-fs) docs for details. OPTIONAL.\n  * **ignore** - (Function) Ignore/filter files\n  * **entries** - (Array) Define list of files\n  * **map** - (Function) Modify the headers\n  * **mapStream** - (Function) Modify the input/output file streams\n  * **dmode** - (Number) Set the permissions for directories\n  * **fmode** - (Number) Set permissions for files\n  * **strict** - (Boolean) Ignore errors due to unsupported entry types (like device files). Default: true\n  * **dereference** - (Boolean) Pack the contents of the symlink instead of the link itself. Default: false\n* **gz** - (Object) Adjust gzip/gunzip options. See [zlib](https://nodejs.org/api/zlib.html#zlib_options) docs for details. OPTIONAL.\n\n**Example**\n\n```javascript\n\nvar targz = require('targz');\n\n// compress files into tar.gz archive while filtering all .bin files and having gzip level/memLevel set to 6\ntargz.compress({\n    src: 'path_to_files',\n    dest: 'path_to_compressed_file',\n    tar: {\n        ignore: function(name) {\n            return path.extname(name) === '.bin' // ignore .bin files when packing\n        }\n    },\n    gz: {\n        level: 6;\n        memLevel: 6;\n    }\n}, function(err){\n    if(err) {\n        console.log(err);\n    } else {\n        console.log(\"Done!\");\n    }\n});\n\n```\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/miskun/targz.git"
  },
  "scripts": {},
  "version": "1.0.1"
}
